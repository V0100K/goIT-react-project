{"version":3,"file":"static/js/MobileForm___page.50ef6edb.chunk.js","mappings":"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","sources":["webpack://smart-finance-team-work/./src/pages/HomePage/MobileForm/MobileForm.module.scss?ce61","pages/HomePage/MobileForm/MobileForm.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"goback\":\"MobileForm_goback__v160v\",\"transactionadd__wrapper\":\"MobileForm_transactionadd__wrapper__PdhKr\",\"transactionadd__form\":\"MobileForm_transactionadd__form__dtnac\",\"transactionadd__description\":\"MobileForm_transactionadd__description__+EpPv\",\"transactionadd__select\":\"MobileForm_transactionadd__select__2fE-Z\",\"transactionadd__amountwrapper\":\"MobileForm_transactionadd__amountwrapper__g7GWn\",\"transactionadd__amount\":\"MobileForm_transactionadd__amount__8y4BB\",\"transactionadd__iconwrapper\":\"MobileForm_transactionadd__iconwrapper__5aRB0\",\"transactionadd__btnwrapper\":\"MobileForm_transactionadd__btnwrapper__dOstN\",\"transactionadd__btn\":\"MobileForm_transactionadd__btn__+ONpu\",\"darkTheme\":\"MobileForm_darkTheme__MxMUb\"};","import React, { useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getCategories,\r\n  getCategoriesExpense,\r\n  getIncome,\r\n  getExpense,\r\n  addExpense,\r\n  addIncome,\r\n} from \"../../../redux/transactions/transactionsOperation\";\r\nimport { authOperations } from \"../../../redux/auth\";\r\n\r\nimport { ThemeContext, themes } from \"../../../context/themeContext\";\r\n\r\nimport sprite from \"../../../images/sprite.svg\";\r\nimport s from \"./MobileForm.module.scss\";\r\n\r\nconst MobileForm = ({ transaction }) => {\r\n  const isIncome = transaction === \"income\";\r\n\r\n  const [description, setDescription] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [disabledBtn, setDisabledBtn] = useState(true);\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const incomeCategories = useSelector(\r\n    (state) => state.transactions.categories\r\n  );\r\n  const expenseCategories = useSelector(\r\n    (state) => state.transactions.categoriesExpense\r\n  );\r\n\r\n  const date = useSelector((state) => state.transactions.date);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCategories());\r\n    dispatch(getCategoriesExpense());\r\n  }, [dispatch]);\r\n\r\n  const goBackHandler = () => {\r\n    navigate(\"/homepage\");\r\n  };\r\n\r\n  const resetInputs = (e) => {\r\n    setAmount(\"\");\r\n    setDescription(\"\");\r\n    setCategory(\"\");\r\n    setDisabledBtn(true);\r\n  };\r\n\r\n  const onChangeInput = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    if (description.length !== 0 && category !== \"\" && amount > 0) {\r\n      setDisabledBtn(false);\r\n    } else {\r\n      setDisabledBtn(true);\r\n    }\r\n\r\n    switch (name) {\r\n      case \"product\":\r\n        return setDescription(value);\r\n      case \"price\":\r\n        return setAmount(value);\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setCategory(e.target.value);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newOperation = {\r\n      category,\r\n      description,\r\n      amount: Number(amount),\r\n      date,\r\n    };\r\n\r\n    if (isIncome) {\r\n      dispatch(addIncome(newOperation))\r\n        .then(() => dispatch(getIncome()))\r\n        .then(() => dispatch(authOperations.getBalance()));\r\n    } else {\r\n      dispatch(addExpense(newOperation))\r\n        .then(() => dispatch(getExpense()))\r\n        .then(() => dispatch(authOperations.getBalance()));\r\n    }\r\n    resetInputs();\r\n    setDisabledBtn(true);\r\n    goBackHandler();\r\n  };\r\n\r\n  return (\r\n    <section\r\n      className={`background ${\r\n        theme === themes.light ? \"lightTheme\" : s.darkTheme\r\n      }`}\r\n    >\r\n      <div className=\"container\">\r\n        <div className={s.transactionadd__wrapper}>\r\n          <button onClick={goBackHandler} className={s.goback}>\r\n            <svg width=\"24\" height=\"24\" className={s.homepage__logo}>\r\n              <use href={`${sprite}#mob-goback`}></use>\r\n            </svg>\r\n          </button>\r\n          <form className={s.transactionadd__form}>\r\n            <input\r\n              className={s.transactionadd__description}\r\n              type=\"text\"\r\n              value={description}\r\n              name=\"product\"\r\n              onChange={onChangeInput}\r\n              placeholder=\"Описание\"\r\n              maxLength=\"20\"\r\n              minLength=\"3\"\r\n              size=\"20\"\r\n              required\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            />\r\n            <select\r\n              className={s.transactionadd__select}\r\n              value={category}\r\n              label=\"Category\"\r\n              onChange={handleChange}\r\n            >\r\n              <option value=\"hide\">\r\n                {isIncome ? \"Категория\" : \"Категория товара\"}\r\n              </option>\r\n              {(isIncome ? incomeCategories : expenseCategories).map(\r\n                (categorie) => (\r\n                  <option key={categorie} value={categorie}>\r\n                    {categorie}\r\n                  </option>\r\n                )\r\n              )}\r\n            </select>\r\n            <div className={s.transactionadd__amountwrapper}>\r\n              <input\r\n                type=\"number\"\r\n                required\r\n                min=\"1\"\r\n                className={s.transactionadd__amount}\r\n                name=\"price\"\r\n                onWheelCapture={(e) => {\r\n                  e.target.blur();\r\n                }}\r\n                onChange={onChangeInput}\r\n                value={amount}\r\n                placeholder=\"00.00 UAH\"\r\n              />\r\n              <div className={s.transactionadd__iconwrapper}>\r\n                <svg width=\"20\" height=\"20\" className={s.transactionadd__icon}>\r\n                  <use href={`${sprite}#calculator`}></use>\r\n                </svg>\r\n              </div>\r\n            </div>\r\n          </form>\r\n\r\n          <div className={s.transactionadd__btnwrapper}>\r\n            <button\r\n              className={s.transactionadd__btn}\r\n              type=\"button\"\r\n              onClick={submitHandler}\r\n              disabled={disabledBtn}\r\n            >\r\n              Ввод\r\n            </button>\r\n            <button\r\n              className={s.transactionadd__btn}\r\n              type=\"button\"\r\n              onClick={() => resetInputs()}\r\n            >\r\n              Очистить\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MobileForm;\r\n"],"names":["isIncome","transaction","useState","description","setDescription","amount","setAmount","category","setCategory","disabledBtn","setDisabledBtn","theme","useContext","ThemeContext","dispatch","useDispatch","navigate","useNavigate","incomeCategories","useSelector","state","transactions","categories","expenseCategories","categoriesExpense","date","useEffect","getCategories","getCategoriesExpense","goBackHandler","resetInputs","e","onChangeInput","currentTarget","name","value","length","className","themes","s","onClick","width","height","href","sprite","type","onChange","placeholder","maxLength","minLength","size","required","pattern","label","target","map","categorie","min","onWheelCapture","blur","preventDefault","newOperation","Number","addIncome","then","getIncome","authOperations","addExpense","getExpense","disabled"],"sourceRoot":""}